<?xml version="1.0" encoding="UTF-8"?><testrun name="CallTest" project="okhttp-tests" tests="140" started="140" failures="7" errors="0" ignored="1">
  <testsuite name="okhttp3.CallTest" time="6.702">
    <testcase name="asyncCallEngineInitialized" classname="okhttp3.CallTest" time="0.035"/>
    <testcase name="proxyAuthenticateOnConnect" classname="okhttp3.CallTest" time="0.519"/>
    <testcase name="propfindRedirectsToPropfind" classname="okhttp3.CallTest" time="0.011"/>
    <testcase name="connectTimeoutsAttemptsAlternateRoute" classname="okhttp3.CallTest" time="0.132"/>
    <testcase name="recoverFromTlsHandshakeFailure_Async" classname="okhttp3.CallTest" time="0.034"/>
    <testcase name="canceledBeforeExecute" classname="okhttp3.CallTest" time="0.007"/>
    <testcase name="interceptorGetsFramedProtocol" classname="okhttp3.CallTest" time="0.023">
      <failure>java.lang.AssertionError: expected:&lt;h2&gt; but was:&lt;http/1.1&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:144)&#13;
	at okhttp3.CallTest.interceptorGetsFramedProtocol(CallTest.java:2397)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:606)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at okhttp3.internal.io.InMemoryFileSystem$1.evaluate(InMemoryFileSystem.java:45)&#13;
	at okhttp3.mockwebserver.MockWebServer$2.evaluate(MockWebServer.java:160)&#13;
	at okhttp3.mockwebserver.MockWebServer$2.evaluate(MockWebServer.java:160)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)&#13;
	at java.lang.Thread.run(Thread.java:745)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="repeatedHeaderNames" classname="okhttp3.CallTest" time="0.008"/>
    <testcase name="illegalToExecuteTwice_Async" classname="okhttp3.CallTest" time="0.008"/>
    <testcase name="cancelInFlightBeforeResponseReadThrowsIOE" classname="okhttp3.CallTest" time="0.021"/>
    <testcase name="expect100ContinueNonEmptyRequestBody" classname="okhttp3.CallTest" time="0.008"/>
    <testcase name="reusedSourcesGetIndependentTimeoutInstances" classname="okhttp3.CallTest" time="0.009"/>
    <testcase name="canceledBeforeResponseReadSignalsOnFailure_HTTPS" classname="okhttp3.CallTest" time="0.017">
      <failure>java.lang.AssertionError: Socket Closed&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at okhttp3.RecordedResponse.assertFailure(RecordedResponse.java:154)&#13;
	at okhttp3.CallTest.canceledBeforeResponseReadSignalsOnFailure(CallTest.java:1901)&#13;
	at okhttp3.CallTest.canceledBeforeResponseReadSignalsOnFailure_HTTPS(CallTest.java:1907)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:606)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at okhttp3.internal.io.InMemoryFileSystem$1.evaluate(InMemoryFileSystem.java:45)&#13;
	at okhttp3.mockwebserver.MockWebServer$2.evaluate(MockWebServer.java:160)&#13;
	at okhttp3.mockwebserver.MockWebServer$2.evaluate(MockWebServer.java:160)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)&#13;
	at java.lang.Thread.run(Thread.java:745)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="canceledAfterResponseIsDeliveredBreaksStreamButSignalsOnce_HTTPS" classname="okhttp3.CallTest" time="0.021"/>
    <testcase name="connectionPooling" classname="okhttp3.CallTest" time="0.015"/>
    <testcase name="http205WithBodyDisallowed" classname="okhttp3.CallTest" time="0.007"/>
    <testcase name="doesNotAttemptAuthorization21Times" classname="okhttp3.CallTest" time="0.006">
      <failure>java.lang.AssertionError&#13;
	at org.junit.Assert.fail(Assert.java:86)&#13;
	at org.junit.Assert.fail(Assert.java:95)&#13;
	at okhttp3.CallTest.doesNotAttemptAuthorization21Times(CallTest.java:385)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:606)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at okhttp3.internal.io.InMemoryFileSystem$1.evaluate(InMemoryFileSystem.java:45)&#13;
	at okhttp3.mockwebserver.MockWebServer$2.evaluate(MockWebServer.java:160)&#13;
	at okhttp3.mockwebserver.MockWebServer$2.evaluate(MockWebServer.java:160)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)&#13;
	at java.lang.Thread.run(Thread.java:745)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="reusedSinksGetIndependentTimeoutInstances" classname="okhttp3.CallTest" time="0.008"/>
    <testcase name="emptyResponseBody" classname="okhttp3.CallTest" time="0.008"/>
    <testcase name="tlsTimeoutsNotRetried" classname="okhttp3.CallTest" time="0.117"/>
    <testcase name="exceptionThrownByOnResponseIsRedactedAndLogged" classname="okhttp3.CallTest" time="0.011"/>
    <testcase name="cleartextCallsFailWhenCleartextIsDisabled" classname="okhttp3.CallTest" time="0.006"/>
    <testcase name="connectionReuseWhenResponseBodyConsumed_Async" classname="okhttp3.CallTest" time="0.008"/>
    <testcase name="uploadBodySmallChunkedEncoding" classname="okhttp3.CallTest" time="0.019"/>
    <testcase name="unspecifiedRequestBodyContentTypeDoesNotGetDefault" classname="okhttp3.CallTest" time="0.007"/>
    <testcase name="delete" classname="okhttp3.CallTest" time="0.007"/>
    <testcase name="legalToExecuteTwiceCloning_Async" classname="okhttp3.CallTest" time="0.009"/>
    <testcase name="canceledBeforeIOSignalsOnFailure_HTTPS" classname="okhttp3.CallTest" time="0.019"/>
    <testcase name="delete_HTTP_2" classname="okhttp3.CallTest" time="0.018"/>
    <testcase name="networkDropsOnConditionalGet" classname="okhttp3.CallTest" time="0.015"/>
    <testcase name="redirectsDoNotIncludeTooManyCookies" classname="okhttp3.CallTest" time="0.012"/>
    <testcase name="invalidScheme" classname="okhttp3.CallTest" time="0.006"/>
    <testcase name="postEmptyBodyRetransmittedAfterAuthorizationFail_HTTP_2" classname="okhttp3.CallTest" time="0.019"/>
    <testcase name="requestBodyRetransmittedOnClientRequestTimeout" classname="okhttp3.CallTest" time="0.011"/>
    <testcase name="legalToExecuteTwiceCloning" classname="okhttp3.CallTest" time="0.008"/>
    <testcase name="postRedirectsToGet" classname="okhttp3.CallTest" time="0.007"/>
    <testcase name="postBodyRetransmittedOnFailureRecovery" classname="okhttp3.CallTest" time="0.01"/>
    <testcase name="head_HTTP_2" classname="okhttp3.CallTest" time="0.018"/>
    <testcase name="readTimeoutFails" classname="okhttp3.CallTest" time="0.108"/>
    <testcase name="canceledBeforeResponseReadSignalsOnFailure_HTTP_2" classname="okhttp3.CallTest" time="0.013">
      <failure>java.lang.AssertionError: Socket Closed&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at okhttp3.RecordedResponse.assertFailure(RecordedResponse.java:154)&#13;
	at okhttp3.CallTest.canceledBeforeResponseReadSignalsOnFailure(CallTest.java:1901)&#13;
	at okhttp3.CallTest.canceledBeforeResponseReadSignalsOnFailure_HTTP_2(CallTest.java:1912)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:606)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at okhttp3.internal.io.InMemoryFileSystem$1.evaluate(InMemoryFileSystem.java:45)&#13;
	at okhttp3.mockwebserver.MockWebServer$2.evaluate(MockWebServer.java:160)&#13;
	at okhttp3.mockwebserver.MockWebServer$2.evaluate(MockWebServer.java:160)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)&#13;
	at java.lang.Thread.run(Thread.java:745)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="postEmptyBodyRetransmittedAfterAuthorizationFail_HTTPS" classname="okhttp3.CallTest" time="0.016"/>
    <testcase name="invalidHost" classname="okhttp3.CallTest" time="0.004" ignored="true"/>
    <testcase name="invalidPort" classname="okhttp3.CallTest" time="0.006"/>
    <testcase name="onlyIfCachedReturns504WhenNotCached" classname="okhttp3.CallTest" time="0.01"/>
    <testcase name="requestBodySurvivesRetries" classname="okhttp3.CallTest" time="1.023"/>
    <testcase name="requestCookies" classname="okhttp3.CallTest" time="0.01"/>
    <testcase name="http204WithBodyDisallowed" classname="okhttp3.CallTest" time="0.01"/>
    <testcase name="redirect" classname="okhttp3.CallTest" time="0.008"/>
    <testcase name="conditionalCacheHit_Async" classname="okhttp3.CallTest" time="0.008"/>
    <testcase name="redirect_Async" classname="okhttp3.CallTest" time="0.007"/>
    <testcase name="put_HTTP_2" classname="okhttp3.CallTest" time="0.017"/>
    <testcase name="serverSendsInvalidCodeNotANumber" classname="okhttp3.CallTest" time="0.007"/>
    <testcase name="userAgentIsIncludedByDefault" classname="okhttp3.CallTest" time="0.004">
      <failure>java.lang.AssertionError&#13;
	at org.junit.Assert.fail(Assert.java:86)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at org.junit.Assert.assertTrue(Assert.java:52)&#13;
	at okhttp3.CallTest.userAgentIsIncludedByDefault(CallTest.java:2065)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:606)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at okhttp3.internal.io.InMemoryFileSystem$1.evaluate(InMemoryFileSystem.java:45)&#13;
	at okhttp3.mockwebserver.MockWebServer$2.evaluate(MockWebServer.java:160)&#13;
	at okhttp3.mockwebserver.MockWebServer$2.evaluate(MockWebServer.java:160)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)&#13;
	at java.lang.Thread.run(Thread.java:745)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="doesNotFollow21Redirects_Async" classname="okhttp3.CallTest" time="0.015"/>
    <testcase name="post_HTTP_2" classname="okhttp3.CallTest" time="0.019"/>
    <testcase name="canceledAfterResponseIsDeliveredBreaksStreamButSignalsOnce_HTTP_2" classname="okhttp3.CallTest" time="0.018"/>
    <testcase name="proxyAuthenticateOnConnectWithConnectionClose" classname="okhttp3.CallTest" time="0.024"/>
    <testcase name="follow20Redirects" classname="okhttp3.CallTest" time="0.014"/>
    <testcase name="setFollowRedirectsFalse" classname="okhttp3.CallTest" time="0.007"/>
    <testcase name="recoverFromTlsHandshakeFailure_tlsFallbackScsvEnabled" classname="okhttp3.CallTest" time="0.009"/>
    <testcase name="delete_HTTPS" classname="okhttp3.CallTest" time="0.021"/>
    <testcase name="cacheHit" classname="okhttp3.CallTest" time="0.02"/>
    <testcase name="conditionalCacheHit" classname="okhttp3.CallTest" time="0.018"/>
    <testcase name="doesNotFollow21Redirects" classname="okhttp3.CallTest" time="0.014"/>
    <testcase name="cancelInFlightBeforeResponseReadThrowsIOE_HTTP_2" classname="okhttp3.CallTest" time="0.018"/>
    <testcase name="httpProxyAuthenticate" classname="okhttp3.CallTest" time="0.008"/>
    <testcase name="postZerolength_HTTPS" classname="okhttp3.CallTest" time="0.045"/>
    <testcase name="recoverWhenRetryOnConnectionFailureIsTrue" classname="okhttp3.CallTest" time="0.014"/>
    <testcase name="put_HTTPS" classname="okhttp3.CallTest" time="0.018"/>
    <testcase name="repeatedHeaderNames_HTTP_2" classname="okhttp3.CallTest" time="0.016"/>
    <testcase name="asyncResponseCanBeConsumedLater" classname="okhttp3.CallTest" time="0.009"/>
    <testcase name="canceledAfterResponseIsDeliveredBreaksStreamButSignalsOnce" classname="okhttp3.CallTest" time="0.013"/>
    <testcase name="attemptAuthorization20Times" classname="okhttp3.CallTest" time="0.008">
      <failure>java.lang.AssertionError: expected:&lt;200&gt; but was:&lt;401&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:645)&#13;
	at org.junit.Assert.assertEquals(Assert.java:631)&#13;
	at okhttp3.RecordedResponse.assertCode(RecordedResponse.java:65)&#13;
	at okhttp3.CallTest.attemptAuthorization20Times(CallTest.java:369)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:606)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at okhttp3.internal.io.InMemoryFileSystem$1.evaluate(InMemoryFileSystem.java:45)&#13;
	at okhttp3.mockwebserver.MockWebServer$2.evaluate(MockWebServer.java:160)&#13;
	at okhttp3.mockwebserver.MockWebServer$2.evaluate(MockWebServer.java:160)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)&#13;
	at java.lang.Thread.run(Thread.java:745)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="get_HTTP_2" classname="okhttp3.CallTest" time="0.016"/>
    <testcase name="serverSendsInvalidResponseHeaders" classname="okhttp3.CallTest" time="0.007"/>
    <testcase name="cancelBeforeBodyIsRead" classname="okhttp3.CallTest" time="0.761"/>
    <testcase name="cancelInFlightBeforeResponseReadThrowsIOE_HTTPS" classname="okhttp3.CallTest" time="0.015"/>
    <testcase name="get" classname="okhttp3.CallTest" time="0.007"/>
    <testcase name="put" classname="okhttp3.CallTest" time="0.007"/>
    <testcase name="tls" classname="okhttp3.CallTest" time="0.022"/>
    <testcase name="gzip" classname="okhttp3.CallTest" time="0.009"/>
    <testcase name="head" classname="okhttp3.CallTest" time="0.007"/>
    <testcase name="post" classname="okhttp3.CallTest" time="0.006"/>
    <testcase name="canceledBeforeResponseReadSignalsOnFailure" classname="okhttp3.CallTest" time="0.004">
      <failure>java.lang.AssertionError: Socket Closed&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at okhttp3.RecordedResponse.assertFailure(RecordedResponse.java:154)&#13;
	at okhttp3.CallTest.canceledBeforeResponseReadSignalsOnFailure(CallTest.java:1901)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:606)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at okhttp3.internal.io.InMemoryFileSystem$1.evaluate(InMemoryFileSystem.java:45)&#13;
	at okhttp3.mockwebserver.MockWebServer$2.evaluate(MockWebServer.java:160)&#13;
	at okhttp3.mockwebserver.MockWebServer$2.evaluate(MockWebServer.java:160)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)&#13;
	at java.lang.Thread.run(Thread.java:745)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="uploadBodyLargeChunkedEncoding" classname="okhttp3.CallTest" time="0.011"/>
    <testcase name="expect100ContinueEmptyRequestBody" classname="okhttp3.CallTest" time="0.006"/>
    <testcase name="patch" classname="okhttp3.CallTest" time="0.006"/>
    <testcase name="noRecoverWhenRetryOnConnectionFailureIsFalse" classname="okhttp3.CallTest" time="0.007"/>
    <testcase name="recoverFromTlsHandshakeFailure" classname="okhttp3.CallTest" time="0.017"/>
    <testcase name="uploadBodyLargeFixedLength" classname="okhttp3.CallTest" time="0.009"/>
    <testcase name="connectionPooling_Async" classname="okhttp3.CallTest" time="0.007"/>
    <testcase name="tooManyProxyAuthFailuresWithConnectionClose" classname="okhttp3.CallTest" time="0.033"/>
    <testcase name="ipv6HostHasSquareBraces" classname="okhttp3.CallTest" time="0.015"/>
    <testcase name="serverSendsUnnecessaryWhitespace" classname="okhttp3.CallTest" time="0.007"/>
    <testcase name="cancelAll" classname="okhttp3.CallTest" time="0.004"/>
    <testcase name="postEmptyBodyRetransmittedAfterAuthorizationFail" classname="okhttp3.CallTest" time="0.007"/>
    <testcase name="conditionalCacheMiss_Async" classname="okhttp3.CallTest" time="0.007"/>
    <testcase name="conditionalCacheMiss" classname="okhttp3.CallTest" time="0.018"/>
    <testcase name="getClientRequestTimeout" classname="okhttp3.CallTest" time="0.009"/>
    <testcase name="postZerolength_HTTP_2" classname="okhttp3.CallTest" time="0.014"/>
    <testcase name="patch_HTTP_2" classname="okhttp3.CallTest" time="0.015"/>
    <testcase name="noRecoveryFromTlsHandshakeFailureWhenTlsFallbackIsDisabled" classname="okhttp3.CallTest" time="0.008"/>
    <testcase name="getWithRequestBody" classname="okhttp3.CallTest" time="0.004"/>
    <testcase name="failingCallsDoNotInterfereWithConnection" classname="okhttp3.CallTest" time="0.018"/>
    <testcase name="proxyConnectOmitsApplicationHeaders" classname="okhttp3.CallTest" time="0.014"/>
    <testcase name="cancelImmediatelyAfterEnqueue" classname="okhttp3.CallTest" time="0.005"/>
    <testcase name="timeoutsUpdatedOnReusedConnections" classname="okhttp3.CallTest" time="0.761"/>
    <testcase name="patch_HTTPS" classname="okhttp3.CallTest" time="0.032"/>
    <testcase name="gzipResponseAfterAuthenticationChallenge" classname="okhttp3.CallTest" time="0.007"/>
    <testcase name="deleteWithRequestBody" classname="okhttp3.CallTest" time="0.005"/>
    <testcase name="postBodyRetransmittedAfterAuthorizationFail_HTTP_2" classname="okhttp3.CallTest" time="0.014"/>
    <testcase name="cancelWithInterceptor" classname="okhttp3.CallTest" time="0.004"/>
    <testcase name="getReturns500" classname="okhttp3.CallTest" time="0.005"/>
    <testcase name="follow20Redirects_Async" classname="okhttp3.CallTest" time="0.02"/>
    <testcase name="get_Async" classname="okhttp3.CallTest" time="0.006"/>
    <testcase name="get_HTTPS" classname="okhttp3.CallTest" time="0.013"/>
    <testcase name="cancelDuringHttpsConnect" classname="okhttp3.CallTest" time="0.31"/>
    <testcase name="postZeroLength" classname="okhttp3.CallTest" time="0.011"/>
    <testcase name="cancelDuringHttpConnect" classname="okhttp3.CallTest" time="0.312"/>
    <testcase name="buildRequestUsingHttpUrl" classname="okhttp3.CallTest" time="0.011"/>
    <testcase name="uploadBodySmallFixedLength" classname="okhttp3.CallTest" time="0.033"/>
    <testcase name="illegalToExecuteTwice" classname="okhttp3.CallTest" time="0.006"/>
    <testcase name="canceledBeforeIOSignalsOnFailure" classname="okhttp3.CallTest" time="0.007"/>
    <testcase name="unmatchingPinnedCertificate" classname="okhttp3.CallTest" time="0.019"/>
    <testcase name="noProactiveProxyAuthorization" classname="okhttp3.CallTest" time="0.016"/>
    <testcase name="redirectsDoNotIncludeTooManyAuthHeaders" classname="okhttp3.CallTest" time="0.009"/>
    <testcase name="matchingPinnedCertificate" classname="okhttp3.CallTest" time="0.019"/>
    <testcase name="responseHeaderParsingIsLenient" classname="okhttp3.CallTest" time="0.005"/>
    <testcase name="responseCookies" classname="okhttp3.CallTest" time="0.007"/>
    <testcase name="serverSendsInvalidCodeTooLarge" classname="okhttp3.CallTest" time="0.005"/>
    <testcase name="customDns" classname="okhttp3.CallTest" time="0.006"/>
    <testcase name="postBodyRetransmittedAfterAuthorizationFail" classname="okhttp3.CallTest" time="0.006"/>
    <testcase name="head_HTTPS" classname="okhttp3.CallTest" time="0.015"/>
    <testcase name="tls_Async" classname="okhttp3.CallTest" time="0.014"/>
    <testcase name="connectFails" classname="okhttp3.CallTest" time="1.012"/>
    <testcase name="post_Async" classname="okhttp3.CallTest" time="0.011"/>
    <testcase name="post_HTTPS" classname="okhttp3.CallTest" time="0.023"/>
    <testcase name="postBodyRetransmittedAfterAuthorizationFail_HTTPS" classname="okhttp3.CallTest" time="0.02"/>
    <testcase name="setFollowSslRedirectsFalse" classname="okhttp3.CallTest" time="0.013"/>
    <testcase name="canceledBeforeIOSignalsOnFailure_HTTP_2" classname="okhttp3.CallTest" time="0.01"/>
  </testsuite>
</testrun>
